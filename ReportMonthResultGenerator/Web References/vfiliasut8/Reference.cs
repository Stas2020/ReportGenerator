//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ReportMonthResultGenerator.vfiliasut8 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExchangePeskovFotoGallerySoapBinding", Namespace="ExchangePeskovFotoGallery")]
    public partial class ExchangePeskovFotoGallery : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCostsListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExchangePeskovFotoGallery() {
            this.Url = global::ReportMonthResultGenerator.Properties.Settings.Default.ReportMonthResultGenerator_vfiliasut8_ExchangePeskovFotoGallery;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCostsCompletedEventHandler getCostsCompleted;
        
        /// <remarks/>
        public event getCostsListCompletedEventHandler getCostsListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="ExchangePeskovFotoGallery", ResponseNamespace="ExchangePeskovFotoGallery", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public double getCosts([System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string codeUnion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateStart, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateEnd) {
            object[] results = this.Invoke("getCosts", new object[] {
                        codeUnion,
                        dateStart,
                        dateEnd});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getCostsAsync(string codeUnion, System.DateTime dateStart, System.DateTime dateEnd) {
            this.getCostsAsync(codeUnion, dateStart, dateEnd, null);
        }
        
        /// <remarks/>
        public void getCostsAsync(string codeUnion, System.DateTime dateStart, System.DateTime dateEnd, object userState) {
            if ((this.getCostsOperationCompleted == null)) {
                this.getCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCostsOperationCompleted);
            }
            this.InvokeAsync("getCosts", new object[] {
                        codeUnion,
                        dateStart,
                        dateEnd}, this.getCostsOperationCompleted, userState);
        }
        
        private void OngetCostsOperationCompleted(object arg) {
            if ((this.getCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCostsCompleted(this, new getCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="ExchangePeskovFotoGallery", ResponseNamespace="ExchangePeskovFotoGallery", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string getCostsList([System.Xml.Serialization.XmlElementAttribute(DataType="integer")] string codeUnion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateStart, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateEnd) {
            object[] results = this.Invoke("getCostsList", new object[] {
                        codeUnion,
                        dateStart,
                        dateEnd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCostsListAsync(string codeUnion, System.DateTime dateStart, System.DateTime dateEnd) {
            this.getCostsListAsync(codeUnion, dateStart, dateEnd, null);
        }
        
        /// <remarks/>
        public void getCostsListAsync(string codeUnion, System.DateTime dateStart, System.DateTime dateEnd, object userState) {
            if ((this.getCostsListOperationCompleted == null)) {
                this.getCostsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCostsListOperationCompleted);
            }
            this.InvokeAsync("getCostsList", new object[] {
                        codeUnion,
                        dateStart,
                        dateEnd}, this.getCostsListOperationCompleted, userState);
        }
        
        private void OngetCostsListOperationCompleted(object arg) {
            if ((this.getCostsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCostsListCompleted(this, new getCostsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCostsCompletedEventHandler(object sender, getCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getCostsListCompletedEventHandler(object sender, getCostsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCostsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCostsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591