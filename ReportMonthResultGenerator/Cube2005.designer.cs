#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportMonthResultGenerator
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CHKComp")]
	public partial class Cube2005DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertStaffposition(Staffposition instance);
    partial void UpdateStaffposition(Staffposition instance);
    partial void DeleteStaffposition(Staffposition instance);
    partial void InsertStaffDepartments(StaffDepartments instance);
    partial void UpdateStaffDepartments(StaffDepartments instance);
    partial void DeleteStaffDepartments(StaffDepartments instance);
    partial void InsertXmlChecks(XmlChecks instance);
    partial void UpdateXmlChecks(XmlChecks instance);
    partial void DeleteXmlChecks(XmlChecks instance);
    partial void InsertXmlChecksDishes(XmlChecksDishes instance);
    partial void UpdateXmlChecksDishes(XmlChecksDishes instance);
    partial void DeleteXmlChecksDishes(XmlChecksDishes instance);
    #endregion
		
		public Cube2005DataContext() : 
				base(global::ReportMonthResultGenerator.Properties.Settings.Default.DiogenConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Cube2005DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Cube2005DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Cube2005DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Cube2005DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StaffEmployee> StaffEmployees
		{
			get
			{
				return this.GetTable<StaffEmployee>();
			}
		}
		
		public System.Data.Linq.Table<StaffEmployeeEx> StaffEmployeeEx
		{
			get
			{
				return this.GetTable<StaffEmployeeEx>();
			}
		}
		
		public System.Data.Linq.Table<Staffposition> Staffposition
		{
			get
			{
				return this.GetTable<Staffposition>();
			}
		}
		
		public System.Data.Linq.Table<StaffDepartments> StaffDepartments
		{
			get
			{
				return this.GetTable<StaffDepartments>();
			}
		}
		
		public System.Data.Linq.Table<XmlChecks> XmlChecks
		{
			get
			{
				return this.GetTable<XmlChecks>();
			}
		}
		
		public System.Data.Linq.Table<XmlChecksDishes> XmlChecksDishes
		{
			get
			{
				return this.GetTable<XmlChecksDishes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffEmployee")]
	public partial class StaffEmployee
	{
		
		private int _SUBDIVISION_ID;
		
		private int _EMPLOYEE_ID;
		
		private string _LAST_NAME;
		
		private string _FIRST_NAME;
		
		private string _MIDDLE_NAME;
		
		private int _Position_ID;
		
		public StaffEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBDIVISION_ID", DbType="Int NOT NULL")]
		public int SUBDIVISION_ID
		{
			get
			{
				return this._SUBDIVISION_ID;
			}
			set
			{
				if ((this._SUBDIVISION_ID != value))
				{
					this._SUBDIVISION_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="Int NOT NULL")]
		public int EMPLOYEE_ID
		{
			get
			{
				return this._EMPLOYEE_ID;
			}
			set
			{
				if ((this._EMPLOYEE_ID != value))
				{
					this._EMPLOYEE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="VarChar(60)")]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this._LAST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="VarChar(60)")]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this._FIRST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIDDLE_NAME", DbType="VarChar(60)")]
		public string MIDDLE_NAME
		{
			get
			{
				return this._MIDDLE_NAME;
			}
			set
			{
				if ((this._MIDDLE_NAME != value))
				{
					this._MIDDLE_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position_ID", DbType="Int NOT NULL")]
		public int Position_ID
		{
			get
			{
				return this._Position_ID;
			}
			set
			{
				if ((this._Position_ID != value))
				{
					this._Position_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffEmployeeEx")]
	public partial class StaffEmployeeEx
	{
		
		private int _EMPLOYEE_ID;
		
		private string _LAST_NAME;
		
		private string _FIRST_NAME;
		
		private string _MIDDLE_NAME;
		
		private System.Nullable<int> _SUBDIVISION_ID;
		
		private System.Nullable<int> _POSITION_ID;
		
		private System.Nullable<System.DateTime> _DISMISSAL_DATE;
		
		private System.Nullable<System.DateTime> _ENTRY_DATE;
		
		public StaffEmployeeEx()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="Int NOT NULL")]
		public int EMPLOYEE_ID
		{
			get
			{
				return this._EMPLOYEE_ID;
			}
			set
			{
				if ((this._EMPLOYEE_ID != value))
				{
					this._EMPLOYEE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="VarChar(60)")]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this._LAST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="VarChar(60)")]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this._FIRST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIDDLE_NAME", DbType="VarChar(60)")]
		public string MIDDLE_NAME
		{
			get
			{
				return this._MIDDLE_NAME;
			}
			set
			{
				if ((this._MIDDLE_NAME != value))
				{
					this._MIDDLE_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUBDIVISION_ID", DbType="Int")]
		public System.Nullable<int> SUBDIVISION_ID
		{
			get
			{
				return this._SUBDIVISION_ID;
			}
			set
			{
				if ((this._SUBDIVISION_ID != value))
				{
					this._SUBDIVISION_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_ID", DbType="Int")]
		public System.Nullable<int> POSITION_ID
		{
			get
			{
				return this._POSITION_ID;
			}
			set
			{
				if ((this._POSITION_ID != value))
				{
					this._POSITION_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISMISSAL_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DISMISSAL_DATE
		{
			get
			{
				return this._DISMISSAL_DATE;
			}
			set
			{
				if ((this._DISMISSAL_DATE != value))
				{
					this._DISMISSAL_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENTRY_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ENTRY_DATE
		{
			get
			{
				return this._ENTRY_DATE;
			}
			set
			{
				if ((this._ENTRY_DATE != value))
				{
					this._ENTRY_DATE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staffposition")]
	public partial class Staffposition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _POSITION_ID;
		
		private string _NAME;
		
		private EntityRef<Staffposition> _Staffposition2;
		
		private EntityRef<Staffposition> _Staffposition1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPOSITION_IDChanging(int value);
    partial void OnPOSITION_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public Staffposition()
		{
			this._Staffposition2 = default(EntityRef<Staffposition>);
			this._Staffposition1 = default(EntityRef<Staffposition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int POSITION_ID
		{
			get
			{
				return this._POSITION_ID;
			}
			set
			{
				if ((this._POSITION_ID != value))
				{
					if (this._Staffposition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOSITION_IDChanging(value);
					this.SendPropertyChanging();
					this._POSITION_ID = value;
					this.SendPropertyChanged("POSITION_ID");
					this.OnPOSITION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffposition_Staffposition", Storage="_Staffposition2", ThisKey="POSITION_ID", OtherKey="POSITION_ID", IsUnique=true, IsForeignKey=false)]
		public Staffposition Staffposition2
		{
			get
			{
				return this._Staffposition2.Entity;
			}
			set
			{
				Staffposition previousValue = this._Staffposition2.Entity;
				if (((previousValue != value) 
							|| (this._Staffposition2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffposition2.Entity = null;
						previousValue.Staffposition1 = null;
					}
					this._Staffposition2.Entity = value;
					if ((value != null))
					{
						value.Staffposition1 = this;
					}
					this.SendPropertyChanged("Staffposition2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staffposition_Staffposition", Storage="_Staffposition1", ThisKey="POSITION_ID", OtherKey="POSITION_ID", IsForeignKey=true)]
		public Staffposition Staffposition1
		{
			get
			{
				return this._Staffposition1.Entity;
			}
			set
			{
				Staffposition previousValue = this._Staffposition1.Entity;
				if (((previousValue != value) 
							|| (this._Staffposition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staffposition1.Entity = null;
						previousValue.Staffposition2 = null;
					}
					this._Staffposition1.Entity = value;
					if ((value != null))
					{
						value.Staffposition2 = this;
						this._POSITION_ID = value.POSITION_ID;
					}
					else
					{
						this._POSITION_ID = default(int);
					}
					this.SendPropertyChanged("Staffposition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffDepartments")]
	public partial class StaffDepartments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepID;
		
		private string _DepName;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepIDChanging(int value);
    partial void OnDepIDChanged();
    partial void OnDepNameChanging(string value);
    partial void OnDepNameChanged();
    #endregion
		
		public StaffDepartments()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepID
		{
			get
			{
				return this._DepID;
			}
			set
			{
				if ((this._DepID != value))
				{
					this.OnDepIDChanging(value);
					this.SendPropertyChanging();
					this._DepID = value;
					this.SendPropertyChanged("DepID");
					this.OnDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepName", DbType="NVarChar(50)")]
		public string DepName
		{
			get
			{
				return this._DepName;
			}
			set
			{
				if ((this._DepName != value))
				{
					this.OnDepNameChanging(value);
					this.SendPropertyChanging();
					this._DepName = value;
					this.SendPropertyChanged("DepName");
					this.OnDepNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XmlChecks")]
	public partial class XmlChecks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _SystemDate;
		
		private System.Nullable<System.DateTime> _BusinessDate;
		
		private System.Nullable<System.DateTime> _SystemDateOfOpen;
		
		private System.Nullable<decimal> _Cash;
		
		private System.Nullable<decimal> _Card;
		
		private System.Nullable<decimal> _Credit;
		
		private System.Nullable<decimal> _Summ;
		
		private System.Nullable<decimal> _RealSumm;
		
		private System.Nullable<decimal> _RealCash;
		
		private System.Nullable<bool> _IsChange;
		
		private System.Nullable<int> _PredcheckCount;
		
		private string _DiscountCard;
		
		private System.Nullable<int> _TenderId;
		
		private System.Nullable<int> _DiscountMGR_NUMBER;
		
		private System.Nullable<int> _DegustationMGR_NUMBER;
		
		private string _LoyaltyCard;
		
		private System.Nullable<decimal> _LoyaltyBonus;
		
		private System.Nullable<decimal> _Comp;
		
		private System.Nullable<int> _CompId;
		
		private string _CompName;
		
		private string _CompDescription;
		
		private System.Nullable<bool> _Vozvr;
		
		private System.Nullable<int> _Waiter;
		
		private System.Nullable<int> _Cassir;
		
		private System.Nullable<int> _TerminalId;
		
		private System.Nullable<int> _Dep;
		
		private System.Nullable<int> _TableNumber;
		
		private string _TableName;
		
		private System.Nullable<int> _TableId;
		
		private System.Nullable<int> _Guests;
		
		private System.Nullable<int> _KkmNum;
		
		private string _EKLZNum;
		
		private string _FiskalFileName;
		
		private System.Nullable<System.DateTime> _PedcheckTime;
		
		private System.Nullable<long> _AlohaCheckNum;
		
		private System.Nullable<int> _CheckTimeLong;
		
		private System.Nullable<int> _CheckTimeLongSec;
		
		private System.Nullable<int> _ShortCheckNum;
		
		private System.Nullable<long> _LongCheckNum;
		
		private System.Nullable<long> _UnDepNum;
		
		private EntityRef<XmlChecks> _XmlChecks2;
		
		private EntitySet<XmlChecksDishes> _XmlChecksDishes;
		
		private EntityRef<XmlChecks> _XmlChecks1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSystemDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSystemDateChanged();
    partial void OnBusinessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBusinessDateChanged();
    partial void OnSystemDateOfOpenChanging(System.Nullable<System.DateTime> value);
    partial void OnSystemDateOfOpenChanged();
    partial void OnCashChanging(System.Nullable<decimal> value);
    partial void OnCashChanged();
    partial void OnCardChanging(System.Nullable<decimal> value);
    partial void OnCardChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    partial void OnSummChanging(System.Nullable<decimal> value);
    partial void OnSummChanged();
    partial void OnRealSummChanging(System.Nullable<decimal> value);
    partial void OnRealSummChanged();
    partial void OnRealCashChanging(System.Nullable<decimal> value);
    partial void OnRealCashChanged();
    partial void OnIsChangeChanging(System.Nullable<bool> value);
    partial void OnIsChangeChanged();
    partial void OnPredcheckCountChanging(System.Nullable<int> value);
    partial void OnPredcheckCountChanged();
    partial void OnDiscountCardChanging(string value);
    partial void OnDiscountCardChanged();
    partial void OnTenderIdChanging(System.Nullable<int> value);
    partial void OnTenderIdChanged();
    partial void OnDiscountMGR_NUMBERChanging(System.Nullable<int> value);
    partial void OnDiscountMGR_NUMBERChanged();
    partial void OnDegustationMGR_NUMBERChanging(System.Nullable<int> value);
    partial void OnDegustationMGR_NUMBERChanged();
    partial void OnLoyaltyCardChanging(string value);
    partial void OnLoyaltyCardChanged();
    partial void OnLoyaltyBonusChanging(System.Nullable<decimal> value);
    partial void OnLoyaltyBonusChanged();
    partial void OnCompChanging(System.Nullable<decimal> value);
    partial void OnCompChanged();
    partial void OnCompIdChanging(System.Nullable<int> value);
    partial void OnCompIdChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnCompDescriptionChanging(string value);
    partial void OnCompDescriptionChanged();
    partial void OnVozvrChanging(System.Nullable<bool> value);
    partial void OnVozvrChanged();
    partial void OnWaiterChanging(System.Nullable<int> value);
    partial void OnWaiterChanged();
    partial void OnCassirChanging(System.Nullable<int> value);
    partial void OnCassirChanged();
    partial void OnTerminalIdChanging(System.Nullable<int> value);
    partial void OnTerminalIdChanged();
    partial void OnDepChanging(System.Nullable<int> value);
    partial void OnDepChanged();
    partial void OnTableNumberChanging(System.Nullable<int> value);
    partial void OnTableNumberChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTableIdChanging(System.Nullable<int> value);
    partial void OnTableIdChanged();
    partial void OnGuestsChanging(System.Nullable<int> value);
    partial void OnGuestsChanged();
    partial void OnKkmNumChanging(System.Nullable<int> value);
    partial void OnKkmNumChanged();
    partial void OnEKLZNumChanging(string value);
    partial void OnEKLZNumChanged();
    partial void OnFiskalFileNameChanging(string value);
    partial void OnFiskalFileNameChanged();
    partial void OnPedcheckTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPedcheckTimeChanged();
    partial void OnAlohaCheckNumChanging(System.Nullable<long> value);
    partial void OnAlohaCheckNumChanged();
    partial void OnCheckTimeLongChanging(System.Nullable<int> value);
    partial void OnCheckTimeLongChanged();
    partial void OnCheckTimeLongSecChanging(System.Nullable<int> value);
    partial void OnCheckTimeLongSecChanged();
    partial void OnShortCheckNumChanging(System.Nullable<int> value);
    partial void OnShortCheckNumChanged();
    partial void OnLongCheckNumChanging(System.Nullable<long> value);
    partial void OnLongCheckNumChanged();
    partial void OnUnDepNumChanging(System.Nullable<long> value);
    partial void OnUnDepNumChanged();
    #endregion
		
		public XmlChecks()
		{
			this._XmlChecks2 = default(EntityRef<XmlChecks>);
			this._XmlChecksDishes = new EntitySet<XmlChecksDishes>(new Action<XmlChecksDishes>(this.attach_XmlChecksDishes), new Action<XmlChecksDishes>(this.detach_XmlChecksDishes));
			this._XmlChecks1 = default(EntityRef<XmlChecks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._XmlChecks1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SystemDate
		{
			get
			{
				return this._SystemDate;
			}
			set
			{
				if ((this._SystemDate != value))
				{
					this.OnSystemDateChanging(value);
					this.SendPropertyChanging();
					this._SystemDate = value;
					this.SendPropertyChanged("SystemDate");
					this.OnSystemDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BusinessDate
		{
			get
			{
				return this._BusinessDate;
			}
			set
			{
				if ((this._BusinessDate != value))
				{
					this.OnBusinessDateChanging(value);
					this.SendPropertyChanging();
					this._BusinessDate = value;
					this.SendPropertyChanged("BusinessDate");
					this.OnBusinessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemDateOfOpen", DbType="DateTime")]
		public System.Nullable<System.DateTime> SystemDateOfOpen
		{
			get
			{
				return this._SystemDateOfOpen;
			}
			set
			{
				if ((this._SystemDateOfOpen != value))
				{
					this.OnSystemDateOfOpenChanging(value);
					this.SendPropertyChanging();
					this._SystemDateOfOpen = value;
					this.SendPropertyChanged("SystemDateOfOpen");
					this.OnSystemDateOfOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash", DbType="Money")]
		public System.Nullable<decimal> Cash
		{
			get
			{
				return this._Cash;
			}
			set
			{
				if ((this._Cash != value))
				{
					this.OnCashChanging(value);
					this.SendPropertyChanging();
					this._Cash = value;
					this.SendPropertyChanged("Cash");
					this.OnCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card", DbType="Money")]
		public System.Nullable<decimal> Card
		{
			get
			{
				return this._Card;
			}
			set
			{
				if ((this._Card != value))
				{
					this.OnCardChanging(value);
					this.SendPropertyChanging();
					this._Card = value;
					this.SendPropertyChanged("Card");
					this.OnCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Money")]
		public System.Nullable<decimal> Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summ", DbType="Money")]
		public System.Nullable<decimal> Summ
		{
			get
			{
				return this._Summ;
			}
			set
			{
				if ((this._Summ != value))
				{
					this.OnSummChanging(value);
					this.SendPropertyChanging();
					this._Summ = value;
					this.SendPropertyChanged("Summ");
					this.OnSummChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealSumm", DbType="Money")]
		public System.Nullable<decimal> RealSumm
		{
			get
			{
				return this._RealSumm;
			}
			set
			{
				if ((this._RealSumm != value))
				{
					this.OnRealSummChanging(value);
					this.SendPropertyChanging();
					this._RealSumm = value;
					this.SendPropertyChanged("RealSumm");
					this.OnRealSummChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCash", DbType="Money")]
		public System.Nullable<decimal> RealCash
		{
			get
			{
				return this._RealCash;
			}
			set
			{
				if ((this._RealCash != value))
				{
					this.OnRealCashChanging(value);
					this.SendPropertyChanging();
					this._RealCash = value;
					this.SendPropertyChanged("RealCash");
					this.OnRealCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChange", DbType="Bit")]
		public System.Nullable<bool> IsChange
		{
			get
			{
				return this._IsChange;
			}
			set
			{
				if ((this._IsChange != value))
				{
					this.OnIsChangeChanging(value);
					this.SendPropertyChanging();
					this._IsChange = value;
					this.SendPropertyChanged("IsChange");
					this.OnIsChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredcheckCount", DbType="Int")]
		public System.Nullable<int> PredcheckCount
		{
			get
			{
				return this._PredcheckCount;
			}
			set
			{
				if ((this._PredcheckCount != value))
				{
					this.OnPredcheckCountChanging(value);
					this.SendPropertyChanging();
					this._PredcheckCount = value;
					this.SendPropertyChanged("PredcheckCount");
					this.OnPredcheckCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCard", DbType="NVarChar(20)")]
		public string DiscountCard
		{
			get
			{
				return this._DiscountCard;
			}
			set
			{
				if ((this._DiscountCard != value))
				{
					this.OnDiscountCardChanging(value);
					this.SendPropertyChanging();
					this._DiscountCard = value;
					this.SendPropertyChanged("DiscountCard");
					this.OnDiscountCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderId", DbType="Int")]
		public System.Nullable<int> TenderId
		{
			get
			{
				return this._TenderId;
			}
			set
			{
				if ((this._TenderId != value))
				{
					this.OnTenderIdChanging(value);
					this.SendPropertyChanging();
					this._TenderId = value;
					this.SendPropertyChanged("TenderId");
					this.OnTenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountMGR_NUMBER", DbType="Int")]
		public System.Nullable<int> DiscountMGR_NUMBER
		{
			get
			{
				return this._DiscountMGR_NUMBER;
			}
			set
			{
				if ((this._DiscountMGR_NUMBER != value))
				{
					this.OnDiscountMGR_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._DiscountMGR_NUMBER = value;
					this.SendPropertyChanged("DiscountMGR_NUMBER");
					this.OnDiscountMGR_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegustationMGR_NUMBER", DbType="Int")]
		public System.Nullable<int> DegustationMGR_NUMBER
		{
			get
			{
				return this._DegustationMGR_NUMBER;
			}
			set
			{
				if ((this._DegustationMGR_NUMBER != value))
				{
					this.OnDegustationMGR_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._DegustationMGR_NUMBER = value;
					this.SendPropertyChanged("DegustationMGR_NUMBER");
					this.OnDegustationMGR_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoyaltyCard", DbType="NVarChar(20)")]
		public string LoyaltyCard
		{
			get
			{
				return this._LoyaltyCard;
			}
			set
			{
				if ((this._LoyaltyCard != value))
				{
					this.OnLoyaltyCardChanging(value);
					this.SendPropertyChanging();
					this._LoyaltyCard = value;
					this.SendPropertyChanged("LoyaltyCard");
					this.OnLoyaltyCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoyaltyBonus", DbType="Money")]
		public System.Nullable<decimal> LoyaltyBonus
		{
			get
			{
				return this._LoyaltyBonus;
			}
			set
			{
				if ((this._LoyaltyBonus != value))
				{
					this.OnLoyaltyBonusChanging(value);
					this.SendPropertyChanging();
					this._LoyaltyBonus = value;
					this.SendPropertyChanged("LoyaltyBonus");
					this.OnLoyaltyBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comp", DbType="Money")]
		public System.Nullable<decimal> Comp
		{
			get
			{
				return this._Comp;
			}
			set
			{
				if ((this._Comp != value))
				{
					this.OnCompChanging(value);
					this.SendPropertyChanging();
					this._Comp = value;
					this.SendPropertyChanged("Comp");
					this.OnCompChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompId", DbType="Int")]
		public System.Nullable<int> CompId
		{
			get
			{
				return this._CompId;
			}
			set
			{
				if ((this._CompId != value))
				{
					this.OnCompIdChanging(value);
					this.SendPropertyChanging();
					this._CompId = value;
					this.SendPropertyChanged("CompId");
					this.OnCompIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(50)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompDescription", DbType="NVarChar(50)")]
		public string CompDescription
		{
			get
			{
				return this._CompDescription;
			}
			set
			{
				if ((this._CompDescription != value))
				{
					this.OnCompDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CompDescription = value;
					this.SendPropertyChanged("CompDescription");
					this.OnCompDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vozvr", DbType="Bit")]
		public System.Nullable<bool> Vozvr
		{
			get
			{
				return this._Vozvr;
			}
			set
			{
				if ((this._Vozvr != value))
				{
					this.OnVozvrChanging(value);
					this.SendPropertyChanging();
					this._Vozvr = value;
					this.SendPropertyChanged("Vozvr");
					this.OnVozvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waiter", DbType="Int")]
		public System.Nullable<int> Waiter
		{
			get
			{
				return this._Waiter;
			}
			set
			{
				if ((this._Waiter != value))
				{
					this.OnWaiterChanging(value);
					this.SendPropertyChanging();
					this._Waiter = value;
					this.SendPropertyChanged("Waiter");
					this.OnWaiterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cassir", DbType="Int")]
		public System.Nullable<int> Cassir
		{
			get
			{
				return this._Cassir;
			}
			set
			{
				if ((this._Cassir != value))
				{
					this.OnCassirChanging(value);
					this.SendPropertyChanging();
					this._Cassir = value;
					this.SendPropertyChanged("Cassir");
					this.OnCassirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalId", DbType="Int")]
		public System.Nullable<int> TerminalId
		{
			get
			{
				return this._TerminalId;
			}
			set
			{
				if ((this._TerminalId != value))
				{
					this.OnTerminalIdChanging(value);
					this.SendPropertyChanging();
					this._TerminalId = value;
					this.SendPropertyChanged("TerminalId");
					this.OnTerminalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="Int")]
		public System.Nullable<int> Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this.OnDepChanging(value);
					this.SendPropertyChanging();
					this._Dep = value;
					this.SendPropertyChanged("Dep");
					this.OnDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableNumber", DbType="Int")]
		public System.Nullable<int> TableNumber
		{
			get
			{
				return this._TableNumber;
			}
			set
			{
				if ((this._TableNumber != value))
				{
					this.OnTableNumberChanging(value);
					this.SendPropertyChanging();
					this._TableNumber = value;
					this.SendPropertyChanged("TableNumber");
					this.OnTableNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					this.OnTableIdChanging(value);
					this.SendPropertyChanging();
					this._TableId = value;
					this.SendPropertyChanged("TableId");
					this.OnTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guests", DbType="Int")]
		public System.Nullable<int> Guests
		{
			get
			{
				return this._Guests;
			}
			set
			{
				if ((this._Guests != value))
				{
					this.OnGuestsChanging(value);
					this.SendPropertyChanging();
					this._Guests = value;
					this.SendPropertyChanged("Guests");
					this.OnGuestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KkmNum", DbType="Int")]
		public System.Nullable<int> KkmNum
		{
			get
			{
				return this._KkmNum;
			}
			set
			{
				if ((this._KkmNum != value))
				{
					this.OnKkmNumChanging(value);
					this.SendPropertyChanging();
					this._KkmNum = value;
					this.SendPropertyChanged("KkmNum");
					this.OnKkmNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EKLZNum", DbType="NVarChar(50)")]
		public string EKLZNum
		{
			get
			{
				return this._EKLZNum;
			}
			set
			{
				if ((this._EKLZNum != value))
				{
					this.OnEKLZNumChanging(value);
					this.SendPropertyChanging();
					this._EKLZNum = value;
					this.SendPropertyChanged("EKLZNum");
					this.OnEKLZNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiskalFileName", DbType="NVarChar(100)")]
		public string FiskalFileName
		{
			get
			{
				return this._FiskalFileName;
			}
			set
			{
				if ((this._FiskalFileName != value))
				{
					this.OnFiskalFileNameChanging(value);
					this.SendPropertyChanging();
					this._FiskalFileName = value;
					this.SendPropertyChanged("FiskalFileName");
					this.OnFiskalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PedcheckTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PedcheckTime
		{
			get
			{
				return this._PedcheckTime;
			}
			set
			{
				if ((this._PedcheckTime != value))
				{
					this.OnPedcheckTimeChanging(value);
					this.SendPropertyChanging();
					this._PedcheckTime = value;
					this.SendPropertyChanged("PedcheckTime");
					this.OnPedcheckTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlohaCheckNum", DbType="BigInt")]
		public System.Nullable<long> AlohaCheckNum
		{
			get
			{
				return this._AlohaCheckNum;
			}
			set
			{
				if ((this._AlohaCheckNum != value))
				{
					this.OnAlohaCheckNumChanging(value);
					this.SendPropertyChanging();
					this._AlohaCheckNum = value;
					this.SendPropertyChanged("AlohaCheckNum");
					this.OnAlohaCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTimeLong", DbType="Int")]
		public System.Nullable<int> CheckTimeLong
		{
			get
			{
				return this._CheckTimeLong;
			}
			set
			{
				if ((this._CheckTimeLong != value))
				{
					this.OnCheckTimeLongChanging(value);
					this.SendPropertyChanging();
					this._CheckTimeLong = value;
					this.SendPropertyChanged("CheckTimeLong");
					this.OnCheckTimeLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTimeLongSec", DbType="Int")]
		public System.Nullable<int> CheckTimeLongSec
		{
			get
			{
				return this._CheckTimeLongSec;
			}
			set
			{
				if ((this._CheckTimeLongSec != value))
				{
					this.OnCheckTimeLongSecChanging(value);
					this.SendPropertyChanging();
					this._CheckTimeLongSec = value;
					this.SendPropertyChanged("CheckTimeLongSec");
					this.OnCheckTimeLongSecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortCheckNum", DbType="Int")]
		public System.Nullable<int> ShortCheckNum
		{
			get
			{
				return this._ShortCheckNum;
			}
			set
			{
				if ((this._ShortCheckNum != value))
				{
					this.OnShortCheckNumChanging(value);
					this.SendPropertyChanging();
					this._ShortCheckNum = value;
					this.SendPropertyChanged("ShortCheckNum");
					this.OnShortCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongCheckNum", DbType="BigInt")]
		public System.Nullable<long> LongCheckNum
		{
			get
			{
				return this._LongCheckNum;
			}
			set
			{
				if ((this._LongCheckNum != value))
				{
					this.OnLongCheckNumChanging(value);
					this.SendPropertyChanging();
					this._LongCheckNum = value;
					this.SendPropertyChanged("LongCheckNum");
					this.OnLongCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnDepNum", DbType="BigInt")]
		public System.Nullable<long> UnDepNum
		{
			get
			{
				return this._UnDepNum;
			}
			set
			{
				if ((this._UnDepNum != value))
				{
					this.OnUnDepNumChanging(value);
					this.SendPropertyChanging();
					this._UnDepNum = value;
					this.SendPropertyChanged("UnDepNum");
					this.OnUnDepNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XmlChecks_XmlChecks", Storage="_XmlChecks2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public XmlChecks XmlChecks2
		{
			get
			{
				return this._XmlChecks2.Entity;
			}
			set
			{
				XmlChecks previousValue = this._XmlChecks2.Entity;
				if (((previousValue != value) 
							|| (this._XmlChecks2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XmlChecks2.Entity = null;
						previousValue.XmlChecks1 = null;
					}
					this._XmlChecks2.Entity = value;
					if ((value != null))
					{
						value.XmlChecks1 = this;
					}
					this.SendPropertyChanged("XmlChecks2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XmlChecks_XmlChecksDishes", Storage="_XmlChecksDishes", ThisKey="Id", OtherKey="CheckId")]
		public EntitySet<XmlChecksDishes> XmlChecksDishes
		{
			get
			{
				return this._XmlChecksDishes;
			}
			set
			{
				this._XmlChecksDishes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XmlChecks_XmlChecks", Storage="_XmlChecks1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public XmlChecks XmlChecks1
		{
			get
			{
				return this._XmlChecks1.Entity;
			}
			set
			{
				XmlChecks previousValue = this._XmlChecks1.Entity;
				if (((previousValue != value) 
							|| (this._XmlChecks1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XmlChecks1.Entity = null;
						previousValue.XmlChecks2 = null;
					}
					this._XmlChecks1.Entity = value;
					if ((value != null))
					{
						value.XmlChecks2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("XmlChecks1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XmlChecksDishes(XmlChecksDishes entity)
		{
			this.SendPropertyChanging();
			entity.XmlChecks = this;
		}
		
		private void detach_XmlChecksDishes(XmlChecksDishes entity)
		{
			this.SendPropertyChanging();
			entity.XmlChecks = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XmlChecksDishes")]
	public partial class XmlChecksDishes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _BarCode;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _OPrice;
		
		private System.Nullable<bool> _Qty;
		
		private System.Nullable<double> _PriceOne;
		
		private System.Nullable<double> _QUANTITY;
		
		private long _CheckId;
		
		private EntityRef<XmlChecks> _XmlChecks;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBarCodeChanging(System.Nullable<int> value);
    partial void OnBarCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnOPriceChanging(System.Nullable<decimal> value);
    partial void OnOPriceChanged();
    partial void OnQtyChanging(System.Nullable<bool> value);
    partial void OnQtyChanged();
    partial void OnPriceOneChanging(System.Nullable<double> value);
    partial void OnPriceOneChanged();
    partial void OnQUANTITYChanging(System.Nullable<double> value);
    partial void OnQUANTITYChanged();
    partial void OnCheckIdChanging(long value);
    partial void OnCheckIdChanged();
    #endregion
		
		public XmlChecksDishes()
		{
			this._XmlChecks = default(EntityRef<XmlChecks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="Int")]
		public System.Nullable<int> BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPrice", DbType="Money")]
		public System.Nullable<decimal> OPrice
		{
			get
			{
				return this._OPrice;
			}
			set
			{
				if ((this._OPrice != value))
				{
					this.OnOPriceChanging(value);
					this.SendPropertyChanging();
					this._OPrice = value;
					this.SendPropertyChanged("OPrice");
					this.OnOPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Bit")]
		public System.Nullable<bool> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOne", DbType="Float")]
		public System.Nullable<double> PriceOne
		{
			get
			{
				return this._PriceOne;
			}
			set
			{
				if ((this._PriceOne != value))
				{
					this.OnPriceOneChanging(value);
					this.SendPropertyChanging();
					this._PriceOne = value;
					this.SendPropertyChanged("PriceOne");
					this.OnPriceOneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Float")]
		public System.Nullable<double> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckId", DbType="BigInt NOT NULL")]
		public long CheckId
		{
			get
			{
				return this._CheckId;
			}
			set
			{
				if ((this._CheckId != value))
				{
					if (this._XmlChecks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckIdChanging(value);
					this.SendPropertyChanging();
					this._CheckId = value;
					this.SendPropertyChanged("CheckId");
					this.OnCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XmlChecks_XmlChecksDishes", Storage="_XmlChecks", ThisKey="CheckId", OtherKey="Id", IsForeignKey=true)]
		public XmlChecks XmlChecks
		{
			get
			{
				return this._XmlChecks.Entity;
			}
			set
			{
				XmlChecks previousValue = this._XmlChecks.Entity;
				if (((previousValue != value) 
							|| (this._XmlChecks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XmlChecks.Entity = null;
						previousValue.XmlChecksDishes.Remove(this);
					}
					this._XmlChecks.Entity = value;
					if ((value != null))
					{
						value.XmlChecksDishes.Add(this);
						this._CheckId = value.Id;
					}
					else
					{
						this._CheckId = default(long);
					}
					this.SendPropertyChanged("XmlChecks");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
